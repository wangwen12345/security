====================================iptables基本管理=====================
安装iptables-services并启动服务
yum -y install iptables-services      //不装重启电脑修改的内容会丢失
systemctl start iptables-services

************iptables的4个表（区分大小写）iptables的5个链*****************************
1）iptables的4个表（区分大小写）：
iptables默认有4个表，nat表（地址转换表PREROUTING、POSTROUNTING、OUTPUT）、filter表（数据过滤表,里面有INPUT、OUTPUT、FORWARD）
raw表（状态跟踪表）、mangle表（包标记表）     //这2个表基本不用了:raw影响性能, mangle可以重置15跳

2）iptables的5个链（区分大小写）              //不是每个表必须有5个链
INPUT链（入站规则）
OUTPUT链（出站规则）
FORWARD链（转发规则）
PREROUTING链（路由前规则）
POSTROUTING链（路由后规则）

==========================iptables命令的基本使用方法=====================
iptables的语法格式
iptables -t 表名 选项 链名 条件  -j 目标操作
 iptables  -t  filter  -A  INPUT  -p tcp  -j  ACCEPT
[root@proxy ~]# iptables -t filter -I  INPUT   -p  icmp  -j  ACCEPT
[root@proxy ~]# iptables  -I  INPUT  -p  icmp  -j  REJECT
//注意事项与规律：
//可以不指定表，默认为filter表
//可以不指定链，默认为对应表的所有链
//如果没有找到匹配条件，则执行防火墙默认规则
//选项/链名/目标操作用大写字母，其余都小写
########################################################################
//目标操作：
// ACCEPT：允许通过/放行
// DROP：直接丢弃，不给出任何回应
// REJECT：拒绝通过，必要时会给出提示
// LOG：记录日志，然后传给下一条规则

iptables命令的常用选项
添加规则:
-A 追加一条防火墙规则至链的末尾位置
-I 插入一条防火墙规则之链的开头
查看规则
-L 查看所有iptables规则
-n   以数字形式小时地址、端口等信息
--line-numbers
删除规则
-D 删除链内指定序号(或内容)的一条规则
-F 删除所有
默认规则
-P  为指定的链设置规则

2）iptables命令的使用案例
创建规则的案例：
[root@proxy ~]# iptables  -t  filter  -A  INPUT  -p tcp  -j  ACCEPT
//追加规则至filter表中的INPUT链的末尾，允许任何人使用TCP协议访问本机
[root@proxy ~]# iptables  -I  INPUT  -p  udp  -j  ACCEPT
//插入规则至filter表中的INPUT链的开头，允许任何人使用UDP协议访问本机
[root@proxy ~]# iptables  -I  INPUT 2  -p  icmp  -j  ACCEPT
//插入规则至filter表中的INPUT链的第2行，允许任何人使用ICMP协议访问本机

查看iptables防火墙规则
[root@proxy ~]# iptables  -nL  INPUT                    //仅查看INPUT链的规则 n必须在L前面
target     prot opt source               destination
ACCEPT     udp  --  0.0.0.0/0            0.0.0.0/0
ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0
ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0
[root@proxy ~]# iptables  -L  INPUT  --line-numbers        //查看规则，显示行号
num  target     prot opt source         destination
1    ACCEPT     udp   --  anywhere     anywhere
2    ACCEPT     icmp --   anywhere     anywhere
3    ACCEPT     tcp  --   anywhere     anywhere

 
===============================filter过滤和转发控制=========================
iptablesi防火墙可以根据很多很灵活的规则进行过滤行为，具体常用的过滤条件
通用匹配: 
1 协议匹配 -p 协议名称
2 地址匹配 -s(source)源地址 -d 目标地址
3 接口匹配 -i接受数据的网卡 -o 发送数据的网卡
隐含匹配
1 端口匹配 --port 源端口号 --dport 目标端口号
2 ICMP类型匹配 --icmp-type ICMP类型

[root@proxy ~]# iptables -I INPUT -p tcp --dport 80 -j REJECT
[root@proxy ~]# iptables -I INPUT -s 192.168.2.100 -j REJECT
[root@proxy ~]# iptables -I INPUT -d 192.168.2.5 -p tcp --dport 80 -j REJECT
[root@proxy ~]# iptables -I INPUT -i eth0 -p tcp --dport 80 -j REJECT
[root@proxy ~]# iptables  -A  INPUT  -s 192.168.4.100  -j  DROP
//丢弃192.168.4.100发给本机的所有数据包
[root@proxy ~]# iptables  -A  INPUT -s  192.168.2.0/24  -j  DROP
//丢弃192.168.2.0/24网络中所有主机发送给本机的所有数据包
[root@proxy ~]# iptables -A  INPUT -s  114.212.33.12  -p tcp --dport 22 -j  REJECT
//拒绝114.212.33.12使用tcp协议远程连接本机ssh（22端口）

=====================开启Linux的路由转发功能===============

1）Linux内核默认支持软路由功能，通过修改内核参数即可开启或关闭路由转发功能。
[root@proxy ~]# echo 0 > /proc/sys/net/ipv4/ip_forward            //关闭路由转发
[root@proxy ~]# echo 1 > /proc/sys/net/ipv4/ip_forward            //开启路由转发
//注意以上操作仅当前有效，计算机重启后无效
[root@proxy ~]# echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
//修改/etc/sysctl.conf配置文件，可以实现永久有效规则

iptables -I INPUT -p icmp --icmp-type echo-request -j DROP
iptables -I INPUT -p icmp --icmp-type echo-reply -j ACCEPT
iptables -I OUTPUT -p icmp --icmp-type echo-reply -j DROP
iptables -I OUTPUT -p icmp --icmp-type echo-request -j ACCEPT

======================防火墙扩展规则================
iptables在基本过滤条件的基础上还扩展了很多其他条件，在使用时需要使用-m参数来启动这些扩展功能，语法如下：
iptables 选项 链名称 -m 扩展模块 --具体扩展条件 -j 动作

nmap -sP 192.168.4.100 可以扫描到对方的mac地址
[root@proxy ~]# iptables  -A  INPUT  -p tcp --dport 22\
> -m   mac --mac-source  52:54:00:00:00:0b  -j  DROP
//拒绝52:54:00:00:00:0b这台主机远程本机
 
一次需要过滤或放行很多端口时会比较方便
[root@proxy ~]# iptables  -A  INPUT  -p tcp   \
> -m  multiport --dports  20:22,25,80,110,143,16501:16800  -j  ACCEPT   
//一次性开启20,21,22,25,80,110,143,16501到16800所有的端口  (multi: 多的)

============================虚拟机上网============================ 

确定真机已打开路由功能echo 1 > /proc/sys/net/ipv4/ip_forward            //开启路由转发






